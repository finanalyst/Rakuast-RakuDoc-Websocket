FROM alpine:latest

ARG RAKU_RELEASE=2025.02

ENV PKGS="git make gcc musl-dev perl linux-headers bash graphviz openssl-dev"
ENV RAKULIB="inst#/home/raku/.raku"

RUN apk update && apk upgrade \
    && apk add --no-cache $PKGS \
    && git clone --depth 1 --branch ${RAKU_RELEASE} https://github.com/MoarVM/MoarVM.git \
    && cd MoarVM \
    && perl Configure.pl --prefix /usr \
    && make install\
    && cd .. \
    && git clone --depth 1 --branch ${RAKU_RELEASE} https://github.com/Raku/nqp.git \
    && cd nqp \
    && perl Configure.pl --backends=moar --prefix /usr \
    && make install \
    && cd .. \
    && git clone --depth 1 --branch ${RAKU_RELEASE} https://github.com/rakudo/rakudo.git \
    && cd rakudo \
    && perl Configure.pl --backends=moar --prefix /usr \
    && make install

ENV PATH="/usr/share/perl6/site/bin:$PATH"

ARG getopt=0.4.2
ARG prove6=0.0.17
ARG tap=0.3.14
ARG zef=v0.22.5

RUN git clone -b $zef https://github.com/ugexe/zef        \
 && perl6 -Izef/lib zef/bin/zef --/test install ./zef     \
    $([ -z $getopt ] || echo "Getopt::Long:ver<$getopt>") \
    $([ -z $prove6 ] || echo "App::Prove6:ver<$prove6>" ) \
    $([ -z $tap    ] || echo "TAP:ver<$tap>"            ) \
 && rm -rf zef

# install a SASS compiler
ARG DART_SASS_VERSION=1.82.0
ARG DART_SASS_TAR=dart-sass-${DART_SASS_VERSION}-linux-x64-musl.tar.gz
ARG DART_SASS_URL=https://github.com/sass/dart-sass/releases/download/${DART_SASS_VERSION}/${DART_SASS_TAR}
ADD ${DART_SASS_URL} /opt/
RUN cd /opt/ && tar -xzf ${DART_SASS_TAR} && rm ${DART_SASS_TAR}
RUN ln -s /opt/dart-sass/sass /usr/local/bin/sass

# install deps in stage that does not depend on copy
RUN zef install PrettyDump Test::Deeply::Relaxed Test::Output LibCurl URI Digest::SHA1::Native Text::MiscUtils Method::Protected Test::Run "Rainbow:ver<0.3.0+>" File::Directory::Tree Test::META

# Copy in Raku source code and build
RUN zef install Rakuast::RakuDoc::Render

# install CRO
RUN zef install 'Cro::Core'
RUN zef install --/test 'Cro::HTTP'
RUN zef install --/test 'Cro::WebSocket'

# remove unneeded dependents
RUN apk del gcc linux-headers make musl-dev perl

# now the Cro app
RUN mkdir /app
COPY service.raku /app
WORKDIR /app
EXPOSE 50005
CMD raku service.raku
